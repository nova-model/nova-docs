stages:
  - lint
  - test
  - image
  - package

variables:
  GIT_STRATEGY: clone
  IMAGE_NAME: ${NDIP_DOCKER_REPOSITORY}/${CI_PROJECT_PATH}
  IMAGE_TAG: "0.1.0"
  GALAXY_URL: "https://calvera-test.ornl.gov"
  GALAXY_KEY: ${SERVICE_ACCOUNT_API_KEY}

before_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - docker login -u $NDIP_DOCKER_USER -p $NDIP_DOCKER_PASSWORD $NDIP_DOCKER_REPOSITORY

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

lint-check:
  stage: lint
  script:
    - docker build -f dockerfiles/Dockerfile --target source -t image .
    - docker run -u `id -u`:`id -g` image poetry run ruff check
    - docker run -u `id -u`:`id -g` image poetry run ruff format --check
    - docker run -u `id -u`:`id -g` image poetry run mypy .
    - docker tag image ${IMAGE_NAME}:src-${CI_COMMIT_SHA}
    - docker push ${IMAGE_NAME}:src-${CI_COMMIT_SHA}
  tags:
    - rse-multi-builder

build-image:
  stage: image
  variables:
    OVERWRITE_IMAGE: "false"
  when: manual
  script:
    - docker pull ${IMAGE_NAME}:src-${CI_COMMIT_SHA}
    - docker build -f dockerfiles/Dockerfile -t image .
    - docker tag image ${IMAGE_NAME}:bin-${CI_COMMIT_SHA}
    - docker push ${IMAGE_NAME}:bin-${CI_COMMIT_SHA}
    - docker tag image ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:latest
    - >
      if ! docker pull ${IMAGE_NAME}:${IMAGE_TAG} || [ "$OVERWRITE_IMAGE" == "true" ]; then
        docker tag image ${IMAGE_NAME}:${IMAGE_TAG}
        docker push ${IMAGE_NAME}:${IMAGE_TAG}
      else
        echo tag ${IMAGE_TAG} already exists in ${NDIP_DOCKER_REPOSITORY}. Use OVERWRITE_IMAGE="true", delete image in the repository or change the tag
        exit 1
      fi
  tags:
    - rse-multi-builder


docs-test:
  stage: test
  script:
    - docker build -f dockerfiles/Dockerfile --target source -t image .
    - docker run -u `id -u`:`id -g` image bash build_docs.sh
  tags:
    - rse-multi-builder

docs-publish:
  stage: package
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: manual
  script:
    - |
      if [ -z "$READTHEDOCS_WEBHOOK_SECRET" ] || [ -z "$READTHEDOCS_WEBHOOK_URL" ]; then
        echo "Error: READTHEDOCS_WEBHOOK_SECRET and/or READTHEDOCS_WEBHOOK_URL is not set."
        exit 1
      fi
    - curl -X POST -d "branches=latest" -d "token=${READTHEDOCS_WEBHOOK_SECRET}" -d "default_branch=${CI_COMMIT_BRANCH}" ${READTHEDOCS_WEBHOOK_URL}
  tags:
    - rse-multi-builder
